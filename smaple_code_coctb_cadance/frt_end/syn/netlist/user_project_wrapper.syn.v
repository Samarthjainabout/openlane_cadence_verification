/////////////////////////////////////////////////////////////
// Created by: Synopsys DC Ultra(TM) in wire load mode
// Version   : T-2022.03-SP3
// Date      : Fri Oct 18 14:19:21 2024
/////////////////////////////////////////////////////////////


module user_project_wrapper ( vdda1, vdda2, vssa1, vssa2, vccd1, vccd2, vssd1, 
        vssd2, wb_clk_i, wb_rst_i, wbs_stb_i, wbs_cyc_i, wbs_we_i, wbs_sel_i, 
        wbs_dat_i, wbs_adr_i, wbs_ack_o, wbs_dat_o, la_data_in, la_data_out, 
        la_oenb, io_in, io_out, io_oeb, analog_io, user_clock2, user_irq );
  input [3:0] wbs_sel_i;
  input [31:0] wbs_dat_i;
  input [31:0] wbs_adr_i;
  output [31:0] wbs_dat_o;
  input [127:0] la_data_in;
  output [127:0] la_data_out;
  input [127:0] la_oenb;
  input [37:0] io_in;
  output [37:0] io_out;
  output [37:0] io_oeb;
  inout [28:0] analog_io;
  output [2:0] user_irq;
  input wb_clk_i, wb_rst_i, wbs_stb_i, wbs_cyc_i, wbs_we_i, user_clock2;
  output wbs_ack_o;
  inout vdda1,  vdda2,  vssa1,  vssa2,  vccd1,  vccd2,  vssd1,  vssd2;
  wire   \la_data_out[0]_snps_wire , \mprj/counter/N3 ,
         \mprj/counter/*Logic0* , n2, n3, n4, \io_out[0] , \io_oeb[37] ,
         \io_oeb[33] , n8, \io_oeb[0] , \io_oeb[36] ;
  assign user_irq[0] = \mprj/counter/*Logic0* ;
  assign user_irq[1] = \mprj/counter/*Logic0* ;
  assign user_irq[2] = \mprj/counter/*Logic0* ;
  assign io_out[2] = \mprj/counter/*Logic0* ;
  assign io_out[3] = \mprj/counter/*Logic0* ;
  assign io_out[4] = \mprj/counter/*Logic0* ;
  assign io_out[5] = \mprj/counter/*Logic0* ;
  assign io_out[6] = \mprj/counter/*Logic0* ;
  assign io_out[7] = \mprj/counter/*Logic0* ;
  assign io_out[30] = \mprj/counter/*Logic0* ;
  assign io_out[31] = \mprj/counter/*Logic0* ;
  assign io_out[32] = \mprj/counter/*Logic0* ;
  assign io_out[33] = \mprj/counter/*Logic0* ;
  assign io_out[34] = \mprj/counter/*Logic0* ;
  assign io_out[35] = \mprj/counter/*Logic0* ;
  assign io_out[36] = \mprj/counter/*Logic0* ;
  assign io_out[37] = \mprj/counter/*Logic0* ;
  assign la_data_out[2] = \mprj/counter/*Logic0* ;
  assign la_data_out[3] = \mprj/counter/*Logic0* ;
  assign la_data_out[4] = \mprj/counter/*Logic0* ;
  assign la_data_out[5] = \mprj/counter/*Logic0* ;
  assign la_data_out[6] = \mprj/counter/*Logic0* ;
  assign la_data_out[7] = \mprj/counter/*Logic0* ;
  assign la_data_out[8] = \mprj/counter/*Logic0* ;
  assign la_data_out[9] = \mprj/counter/*Logic0* ;
  assign la_data_out[10] = \mprj/counter/*Logic0* ;
  assign la_data_out[11] = \mprj/counter/*Logic0* ;
  assign la_data_out[12] = \mprj/counter/*Logic0* ;
  assign la_data_out[13] = \mprj/counter/*Logic0* ;
  assign la_data_out[14] = \mprj/counter/*Logic0* ;
  assign la_data_out[15] = \mprj/counter/*Logic0* ;
  assign la_data_out[16] = \mprj/counter/*Logic0* ;
  assign la_data_out[17] = \mprj/counter/*Logic0* ;
  assign la_data_out[18] = \mprj/counter/*Logic0* ;
  assign la_data_out[19] = \mprj/counter/*Logic0* ;
  assign la_data_out[20] = \mprj/counter/*Logic0* ;
  assign la_data_out[21] = \mprj/counter/*Logic0* ;
  assign la_data_out[22] = \mprj/counter/*Logic0* ;
  assign la_data_out[23] = \mprj/counter/*Logic0* ;
  assign la_data_out[24] = \mprj/counter/*Logic0* ;
  assign la_data_out[25] = \mprj/counter/*Logic0* ;
  assign la_data_out[26] = \mprj/counter/*Logic0* ;
  assign la_data_out[27] = \mprj/counter/*Logic0* ;
  assign la_data_out[28] = \mprj/counter/*Logic0* ;
  assign la_data_out[29] = \mprj/counter/*Logic0* ;
  assign la_data_out[30] = \mprj/counter/*Logic0* ;
  assign la_data_out[31] = \mprj/counter/*Logic0* ;
  assign la_data_out[32] = \mprj/counter/*Logic0* ;
  assign la_data_out[33] = \mprj/counter/*Logic0* ;
  assign la_data_out[34] = \mprj/counter/*Logic0* ;
  assign la_data_out[35] = \mprj/counter/*Logic0* ;
  assign la_data_out[36] = \mprj/counter/*Logic0* ;
  assign la_data_out[37] = \mprj/counter/*Logic0* ;
  assign la_data_out[38] = \mprj/counter/*Logic0* ;
  assign la_data_out[39] = \mprj/counter/*Logic0* ;
  assign la_data_out[40] = \mprj/counter/*Logic0* ;
  assign la_data_out[41] = \mprj/counter/*Logic0* ;
  assign la_data_out[42] = \mprj/counter/*Logic0* ;
  assign la_data_out[43] = \mprj/counter/*Logic0* ;
  assign la_data_out[44] = \mprj/counter/*Logic0* ;
  assign la_data_out[45] = \mprj/counter/*Logic0* ;
  assign la_data_out[46] = \mprj/counter/*Logic0* ;
  assign la_data_out[47] = \mprj/counter/*Logic0* ;
  assign la_data_out[48] = \mprj/counter/*Logic0* ;
  assign la_data_out[49] = \mprj/counter/*Logic0* ;
  assign la_data_out[50] = \mprj/counter/*Logic0* ;
  assign la_data_out[51] = \mprj/counter/*Logic0* ;
  assign la_data_out[52] = \mprj/counter/*Logic0* ;
  assign la_data_out[53] = \mprj/counter/*Logic0* ;
  assign la_data_out[54] = \mprj/counter/*Logic0* ;
  assign la_data_out[55] = \mprj/counter/*Logic0* ;
  assign la_data_out[56] = \mprj/counter/*Logic0* ;
  assign la_data_out[57] = \mprj/counter/*Logic0* ;
  assign la_data_out[58] = \mprj/counter/*Logic0* ;
  assign la_data_out[59] = \mprj/counter/*Logic0* ;
  assign la_data_out[60] = \mprj/counter/*Logic0* ;
  assign la_data_out[61] = \mprj/counter/*Logic0* ;
  assign la_data_out[62] = \mprj/counter/*Logic0* ;
  assign la_data_out[63] = \mprj/counter/*Logic0* ;
  assign la_data_out[64] = \mprj/counter/*Logic0* ;
  assign la_data_out[65] = \mprj/counter/*Logic0* ;
  assign la_data_out[66] = \mprj/counter/*Logic0* ;
  assign la_data_out[67] = \mprj/counter/*Logic0* ;
  assign la_data_out[68] = \mprj/counter/*Logic0* ;
  assign la_data_out[69] = \mprj/counter/*Logic0* ;
  assign la_data_out[70] = \mprj/counter/*Logic0* ;
  assign la_data_out[71] = \mprj/counter/*Logic0* ;
  assign la_data_out[72] = \mprj/counter/*Logic0* ;
  assign la_data_out[73] = \mprj/counter/*Logic0* ;
  assign la_data_out[74] = \mprj/counter/*Logic0* ;
  assign la_data_out[75] = \mprj/counter/*Logic0* ;
  assign la_data_out[76] = \mprj/counter/*Logic0* ;
  assign la_data_out[77] = \mprj/counter/*Logic0* ;
  assign la_data_out[78] = \mprj/counter/*Logic0* ;
  assign la_data_out[79] = \mprj/counter/*Logic0* ;
  assign la_data_out[80] = \mprj/counter/*Logic0* ;
  assign la_data_out[81] = \mprj/counter/*Logic0* ;
  assign la_data_out[82] = \mprj/counter/*Logic0* ;
  assign la_data_out[83] = \mprj/counter/*Logic0* ;
  assign la_data_out[84] = \mprj/counter/*Logic0* ;
  assign la_data_out[85] = \mprj/counter/*Logic0* ;
  assign la_data_out[86] = \mprj/counter/*Logic0* ;
  assign la_data_out[87] = \mprj/counter/*Logic0* ;
  assign la_data_out[88] = \mprj/counter/*Logic0* ;
  assign la_data_out[89] = \mprj/counter/*Logic0* ;
  assign la_data_out[90] = \mprj/counter/*Logic0* ;
  assign la_data_out[91] = \mprj/counter/*Logic0* ;
  assign la_data_out[92] = \mprj/counter/*Logic0* ;
  assign la_data_out[93] = \mprj/counter/*Logic0* ;
  assign la_data_out[94] = \mprj/counter/*Logic0* ;
  assign la_data_out[95] = \mprj/counter/*Logic0* ;
  assign la_data_out[96] = \mprj/counter/*Logic0* ;
  assign la_data_out[97] = \mprj/counter/*Logic0* ;
  assign la_data_out[98] = \mprj/counter/*Logic0* ;
  assign la_data_out[99] = \mprj/counter/*Logic0* ;
  assign la_data_out[100] = \mprj/counter/*Logic0* ;
  assign la_data_out[101] = \mprj/counter/*Logic0* ;
  assign la_data_out[102] = \mprj/counter/*Logic0* ;
  assign la_data_out[103] = \mprj/counter/*Logic0* ;
  assign la_data_out[104] = \mprj/counter/*Logic0* ;
  assign la_data_out[105] = \mprj/counter/*Logic0* ;
  assign la_data_out[106] = \mprj/counter/*Logic0* ;
  assign la_data_out[107] = \mprj/counter/*Logic0* ;
  assign la_data_out[108] = \mprj/counter/*Logic0* ;
  assign la_data_out[109] = \mprj/counter/*Logic0* ;
  assign la_data_out[110] = \mprj/counter/*Logic0* ;
  assign la_data_out[111] = \mprj/counter/*Logic0* ;
  assign la_data_out[112] = \mprj/counter/*Logic0* ;
  assign la_data_out[113] = \mprj/counter/*Logic0* ;
  assign la_data_out[114] = \mprj/counter/*Logic0* ;
  assign la_data_out[115] = \mprj/counter/*Logic0* ;
  assign la_data_out[116] = \mprj/counter/*Logic0* ;
  assign la_data_out[117] = \mprj/counter/*Logic0* ;
  assign la_data_out[118] = \mprj/counter/*Logic0* ;
  assign la_data_out[119] = \mprj/counter/*Logic0* ;
  assign la_data_out[120] = \mprj/counter/*Logic0* ;
  assign la_data_out[121] = \mprj/counter/*Logic0* ;
  assign la_data_out[122] = \mprj/counter/*Logic0* ;
  assign la_data_out[123] = \mprj/counter/*Logic0* ;
  assign la_data_out[124] = \mprj/counter/*Logic0* ;
  assign la_data_out[125] = \mprj/counter/*Logic0* ;
  assign la_data_out[126] = \mprj/counter/*Logic0* ;
  assign la_data_out[127] = \mprj/counter/*Logic0* ;
  assign wbs_dat_o[0] = \mprj/counter/*Logic0* ;
  assign wbs_dat_o[1] = \mprj/counter/*Logic0* ;
  assign wbs_dat_o[2] = \mprj/counter/*Logic0* ;
  assign wbs_dat_o[3] = \mprj/counter/*Logic0* ;
  assign wbs_dat_o[4] = \mprj/counter/*Logic0* ;
  assign wbs_dat_o[5] = \mprj/counter/*Logic0* ;
  assign wbs_dat_o[6] = \mprj/counter/*Logic0* ;
  assign wbs_dat_o[7] = \mprj/counter/*Logic0* ;
  assign wbs_dat_o[8] = \mprj/counter/*Logic0* ;
  assign wbs_dat_o[9] = \mprj/counter/*Logic0* ;
  assign wbs_dat_o[10] = \mprj/counter/*Logic0* ;
  assign wbs_dat_o[11] = \mprj/counter/*Logic0* ;
  assign wbs_dat_o[12] = \mprj/counter/*Logic0* ;
  assign wbs_dat_o[13] = \mprj/counter/*Logic0* ;
  assign wbs_dat_o[14] = \mprj/counter/*Logic0* ;
  assign wbs_dat_o[15] = \mprj/counter/*Logic0* ;
  assign wbs_dat_o[16] = \mprj/counter/*Logic0* ;
  assign wbs_dat_o[17] = \mprj/counter/*Logic0* ;
  assign wbs_dat_o[18] = \mprj/counter/*Logic0* ;
  assign wbs_dat_o[19] = \mprj/counter/*Logic0* ;
  assign wbs_dat_o[20] = \mprj/counter/*Logic0* ;
  assign wbs_dat_o[21] = \mprj/counter/*Logic0* ;
  assign wbs_dat_o[22] = \mprj/counter/*Logic0* ;
  assign wbs_dat_o[23] = \mprj/counter/*Logic0* ;
  assign wbs_dat_o[24] = \mprj/counter/*Logic0* ;
  assign wbs_dat_o[25] = \mprj/counter/*Logic0* ;
  assign wbs_dat_o[26] = \mprj/counter/*Logic0* ;
  assign wbs_dat_o[27] = \mprj/counter/*Logic0* ;
  assign wbs_dat_o[28] = \mprj/counter/*Logic0* ;
  assign wbs_dat_o[29] = \mprj/counter/*Logic0* ;
  assign wbs_dat_o[30] = \mprj/counter/*Logic0* ;
  assign wbs_dat_o[31] = \mprj/counter/*Logic0* ;
  assign wbs_ack_o = \mprj/counter/*Logic0* ;
  assign la_data_out[1] = \io_out[0] ;
  assign la_data_out[0] = \io_out[0] ;
  assign io_out[1] = \io_out[0] ;
  assign io_out[0] = \io_out[0] ;
  assign io_oeb[1] = \io_oeb[37] ;
  assign io_oeb[4] = \io_oeb[37] ;
  assign io_oeb[31] = \io_oeb[37] ;
  assign io_oeb[37] = \io_oeb[37] ;
  assign io_oeb[5] = \io_oeb[33] ;
  assign io_oeb[6] = \io_oeb[33] ;
  assign io_oeb[2] = \io_oeb[33] ;
  assign io_oeb[33] = \io_oeb[33] ;
  assign io_oeb[35] = \io_oeb[0] ;
  assign io_oeb[7] = \io_oeb[0] ;
  assign io_oeb[3] = \io_oeb[0] ;
  assign io_oeb[0] = \io_oeb[0] ;
  assign io_oeb[30] = \io_oeb[36] ;
  assign io_oeb[32] = \io_oeb[36] ;
  assign io_oeb[34] = \io_oeb[36] ;
  assign io_oeb[36] = \io_oeb[36] ;

  scs130ms_dfxtp_1 \mprj/counter/q_reg  ( .D(\mprj/counter/N3 ), .CLK(wb_clk_i), .Q(\la_data_out[0]_snps_wire ) );
  scs130ms_inv_1 U5 ( .A(la_oenb[65]), .Y(n2) );
  scs130ms_inv_1 U6 ( .A(n2), .Y(n3) );
  scs130ms_a22o_1 U7 ( .A1(n4), .A2(la_data_in[65]), .B1(n3), .B2(wb_rst_i), 
        .X(n8) );
  scs130ms_clkbuf_16 U8 ( .A(\la_data_out[0]_snps_wire ), .X(\io_out[0] ) );
  scs130ms_inv_2 U9 ( .A(n3), .Y(n4) );
  scs130ms_clkbuf_16 U10 ( .A(n8), .X(\io_oeb[37] ) );
  scs130ms_clkbuf_16 U11 ( .A(n8), .X(\io_oeb[33] ) );
  scs130ms_clkbuf_16 U12 ( .A(n8), .X(\io_oeb[0] ) );
  scs130ms_clkbuf_16 U13 ( .A(n8), .X(\io_oeb[36] ) );
  scs130ms_conb_1 U14 ( .LO(\mprj/counter/*Logic0* ) );
  scs130ms_nor2b_1 U15 ( .BN(la_data_in[0]), .A(n8), .Y(\mprj/counter/N3 ) );
endmodule

